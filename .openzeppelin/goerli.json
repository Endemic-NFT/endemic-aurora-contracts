{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x192A5Dc88b6d6e469EB701C305d14f188dF09644",
    "txHash": "0x8e78127e040aabb0c3e10430dad2d44b9e90aa6cbf6ddd0e338b6afdcf2bc166",
    "deployTransaction": {
      "hash": "0x8e78127e040aabb0c3e10430dad2d44b9e90aa6cbf6ddd0e338b6afdcf2bc166",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xF15B146d0251dB2fA9a4170fFFd6d587e009694A",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x9502f908"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f900"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x9502f908"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xf8c984a4b7dd6eda5783a9044ad7a564c8a04222cffb2860ecdb5ec81902b6f5",
      "s": "0x4a6fdad0219d06be0dcbe5a31fefd20be6511450896c24a7a2b6571e77048d4d",
      "v": 1,
      "creates": "0x192A5Dc88b6d6e469EB701C305d14f188dF09644",
      "chainId": 5
    }
  },
  "proxies": [
    {
      "address": "0x03B19c39355fD271A0fF071fAeaEe65F4fe26914",
      "txHash": "0x90b2d059ab9188ed46080d34fa4bc8e6e4ab9c9ae0bcf0536e63c33b116add8e",
      "kind": "transparent"
    },
    {
      "address": "0xFC69e4EFaB6e85D0400bf74873aEc6A5e4b73fbc",
      "txHash": "0x481046d39cfd1a196d46c4e230a3b48fdc1baad9d763c904ef1b2cc55cb8fcf0",
      "kind": "transparent"
    },
    {
      "address": "0x4bfe31506DBCbf63ECda7320A060008e81acf8c5",
      "txHash": "0x78a838176dd9f34b62aa1167e9e554276a25eaf037ee2f97bd0aba79c21890de",
      "kind": "transparent"
    },
    {
      "address": "0xF85Ab30873673dDe16E1d70518cB21814eE8fF9A",
      "txHash": "0x01d7c4463b2e8daa2719e276714378bce11a0e0a74a08703a8d8641fb284bf55",
      "kind": "transparent"
    },
    {
      "address": "0xaFFaD34721F0e77c1a25dE28e360175d6Aaf0d83",
      "txHash": "0xec9249e17ec2c9988617e719887211064ac7ede768579df490cbd2ddc605f9ff",
      "kind": "transparent"
    },
    {
      "address": "0x42321A6BaF15C5cD5872fa79a2c58A7caEcbC077",
      "txHash": "0x734901f0c651a2162cc9430d9c9210e57a383634d8af7fee724b847a99bdd7f5",
      "kind": "transparent"
    },
    {
      "address": "0xcb917eF216367b4Fba9EDce3138E960B9673537E",
      "txHash": "0xcc2fdb356fe87311353def93efe5fe78854fa81ace92807f7bb946dd7e5e027c",
      "kind": "transparent"
    },
    {
      "address": "0xdEC71c37DCaa511db21b43e0Ccb53E04291a6dda",
      "txHash": "0x3d60f131f319d8f00b7bb40deab672ea55b1d83213055ada78c5e9693ecf28c8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a656898b923e572ff39f3c1045cbc67146e274a1531a1ba4aa880204b5b17028": {
      "address": "0xDb9a4e1c30EE69c467c2f7C3B67deF3c94fe757C",
      "txHash": "0x390679bf1dedfbce4e5e406612fd5793fa676412e00daa18df18f5c4728f2840",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractRegistry",
            "label": "saleContracts",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/registry/ContractRegistry.sol:8"
          },
          {
            "contract": "ContractRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/registry/ContractRegistry.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "3268076369ac77391057001304e47111aef132c66cb4a0a59d10a99840d85615": {
      "address": "0x45F3e4c28b68142e7C83c55aA95F3c5281006DB8",
      "txHash": "0x934caf0d4d56918b5a1d8852310f111e5ca7504cb4a05bab4260362b3e018e78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:20"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "DistributorRole",
            "label": "distributors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/DistributorRole.sol:7"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:74"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3682_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:10"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:12"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:13"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:14"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:15"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:91"
          }
        ],
        "types": {
          "t_struct(Counter)3682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "95b1c27810fc09d7939bd50f490ad58e9944c5bf184132712771290245131185": {
      "address": "0x9B794e1d459683544D30ad632DD22F5481BEbE9c",
      "txHash": "0x2218f639dd06d49ae88cbd5d7703b4bc353019401df5e60ccfe4f74f2cdb8cc4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)9165",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)13450",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFeePerAccount",
            "type": "t_mapping(t_address,t_struct(AccountFee)9279_storage)",
            "src": "contracts/fee/FeeProviderCore.sol:30"
          },
          {
            "contract": "FeeProviderCore",
            "label": "collectionsWithoutInitialSaleFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/fee/FeeProviderCore.sol:31"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/fee/FeeProviderCore.sol:147"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)9165": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)13450": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)9279_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)9279_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "67084654bdc6465656ae08167af89edb745b418463ab70fd59eb9cb238192224": {
      "address": "0x96d6B2E34b8a2dc41f59878a4bC7D1b22bd4cc37",
      "txHash": "0x19333651b5c87578e85516cf848ee8dcea5cba7b3628148f42d4f501211808a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "royaltiesPerTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Royalties)544_storage))",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:7"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "royaltiesPerCollection",
            "type": "t_mapping(t_address,t_struct(Royalties)544_storage)",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:8"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:87"
          },
          {
            "contract": "RoyaltiesProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/royalties/RoyaltiesProvider.sol:12"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Royalties)544_storage))": {
            "label": "mapping(address => mapping(uint256 => struct RoyaltiesProviderCore.Royalties))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Royalties)544_storage)": {
            "label": "mapping(uint256 => struct RoyaltiesProviderCore.Royalties)"
          },
          "t_struct(Royalties)544_storage": {
            "label": "struct RoyaltiesProviderCore.Royalties",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalties)544_storage)": {
            "label": "mapping(address => struct RoyaltiesProviderCore.Royalties)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "17d4c9684be73c929c3a43ecf387a18448a9a1b248523c8870953ce93cb90744": {
      "address": "0x89D97baF0F2A0E4D9f8fb33ffaD11f3E716eD196",
      "txHash": "0x9169e098553861824cc2677270938fb99ef0ba601cf7ac580e293c245143e34d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:20"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:74"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3682_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:49"
          }
        ],
        "types": {
          "t_struct(Counter)3682_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "095553b7e7e4ddb5d300540cda6fbf3a422918bc6f7071ddf97034fc7858d708": {
      "address": "0x74121AC105FD83d0E3846E487Ac5D20475828A85",
      "txHash": "0x2b188d17ea09ca6209e7d6575d65ba7039a701e1fb2cddf1fca20173fa89c7a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)1087",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)1054",
            "src": "contracts/marketplace/TransferManager.sol:20"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)2615",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:160"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)1126_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:254"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)1126_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)1126_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)1087": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)1054": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)2615": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "80da8a5c3706eee1d8878171ec0d0943a02d8692a6629092bad18915538330b1": {
      "address": "0xE00F14a2B817ce09eFa525Eb8f13ff2beF96f336",
      "txHash": "0x864ecf04bd0a504dc7a9bcff49f95d73f8280cef285c9c9f05c54fbce6ee6bb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "OfferCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/offer/OfferCore.sol:29"
          },
          {
            "contract": "OfferCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/offer/OfferCore.sol:30"
          },
          {
            "contract": "OfferCore",
            "label": "nextOfferId",
            "type": "t_uint256",
            "src": "contracts/offer/OfferCore.sol:32"
          },
          {
            "contract": "OfferCore",
            "label": "offersById",
            "type": "t_mapping(t_uint256,t_struct(Offer)12584_storage)",
            "src": "contracts/offer/OfferCore.sol:34"
          },
          {
            "contract": "OfferCore",
            "label": "offerIdsByBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "src": "contracts/offer/OfferCore.sol:37"
          },
          {
            "contract": "OfferCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/offer/OfferCore.sol:40"
          },
          {
            "contract": "OfferCore",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)9636",
            "src": "contracts/offer/OfferCore.sol:42"
          },
          {
            "contract": "OfferCore",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13706",
            "src": "contracts/offer/OfferCore.sol:43"
          },
          {
            "contract": "OfferCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/offer/OfferCore.sol:350"
          },
          {
            "contract": "Offer",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/offer/Offer.sol:29"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_uint256,t_struct(Offer)12584_storage)": {
            "label": "mapping(uint256 => struct OfferCore.Offer)"
          },
          "t_struct(Offer)12584_storage": {
            "label": "struct OfferCore.Offer",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "priceWithFee",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IFeeProvider)9636": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IRoyaltiesProvider)13706": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ee222d431f20016c3729dd3a8ceb4a62f20f98ed7ee7988497304d979e6be432": {
      "address": "0x034c8094D3e61Bf1846EED37090846670ae5770c",
      "txHash": "0x473c2fdfd6779734061e59638fb5017db2ccf80eefe82a9ca6521389d84971e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContractImporter",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/import/ContractImporter.sol:22"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
