{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x99d8D0EE7D4956261d0160FaDb1F9571E4dCDe53",
    "txHash": "0xa29b1293cfd6f210b651463904c562b9084b4be1896841b27ccf82835b9264b2",
    "deployTransaction": {
      "hash": "0xa29b1293cfd6f210b651463904c562b9084b4be1896841b27ccf82835b9264b2",
      "type": 0,
      "accessList": null,
      "blockHash": "0xa35c4236f229be3cdac346a5f93d4fdde9c1b6c2975cf0f0a4ecb306fbe0aacd",
      "blockNumber": 73612197,
      "transactionIndex": 0,
      "confirmations": 2,
      "from": "0x5f148706ce473A637146D13bdE23F4160D1F0F62",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x6691b7"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 199,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x5b521af17e34281f5b64191cb4b64711977f1e4741e6fc7ef739f8d571b76c94",
      "s": "0x13e71d5e72414c42000151b932f35a690976c98a36ce7ae981ad6660f242c1c6",
      "v": 2626323145,
      "creates": "0x99d8D0EE7D4956261d0160FaDb1F9571E4dCDe53",
      "chainId": 1313161555
    }
  },
  "proxies": [
    {
      "address": "0x6D27C84EC245A7865718e1CDb7D1aE0EF4B6f08E",
      "txHash": "0x23896f68d475a3d8b9830dd2e21cac07f0350716c4ea1722ab00bc330336f2a8",
      "kind": "transparent"
    },
    {
      "address": "0x599F825A6cBAdA1c8eB972F2ebb6780576d11B96",
      "txHash": "0xcf35b8fc0f6322903afa51e2e3c44aed13dcce64364728655b50bd172224322b",
      "kind": "transparent"
    },
    {
      "address": "0x1F081B956f670D0fbf6d02b0439e802540bA1aBD",
      "txHash": "0x3be0a534188244fbc909fb44128d7fe43ce86b6457bd230e31768e2ea791024f",
      "kind": "transparent"
    },
    {
      "address": "0x45b87060571e9d372c0762497b6893374f3638Ee",
      "txHash": "0xd8e2a939642c11b99b9982cf6f7d337289a75589982e4e97a784ca6f1d3ac440",
      "kind": "transparent"
    },
    {
      "address": "0x6b144f36F83D49dc8c6CCe50a30A18651EC7DF88",
      "txHash": "0xfbca596509f3142670e4edd6b24cfed97babbab627abd6ce9e34d5f83a4d26d6",
      "kind": "transparent"
    },
    {
      "address": "0xa7dDCF667F62e075d113303d9E73ecB4084cF5a8",
      "txHash": "0x555c14b06c00c29a8d6c7a3ed54b37b0d9cc917ff0ce98bce78ac0f05e87f200",
      "kind": "transparent"
    },
    {
      "address": "0x1BE1744a1d718C1E42dA5BD1e79639Ae6DFbEb58",
      "txHash": "0xa61f06245938a3a83555ee41e51a7f74995444b740cbc6e56243ee71c05bbdde",
      "kind": "transparent"
    },
    {
      "address": "0xb00BB669eb0953144caE73cf4049F59B6d358203",
      "txHash": "0x407d5cba8297905e8eba2c4dc9c2c22f60c2959e3470277f62f6085764a0d175",
      "kind": "transparent"
    },
    {
      "address": "0xDd29A2E65c01B75d74A53a469bF90371697846BF",
      "txHash": "0x862a0db510b431e6ab2a36b3caa4b376f0f60fa73903018e8c219231a40e39a9",
      "kind": "transparent"
    },
    {
      "address": "0xB17A0B9ad3160784F92653C19E7DDBE3DEEc54C0",
      "txHash": "0xc5d73e34883165458d566b076af01e82e5e00be07a5530ff6cbc8bda316251a5",
      "kind": "transparent"
    },
    {
      "address": "0x7CDdB0f2defc12205693454a6B6581702e3C7924",
      "txHash": "0x1de08499b7eef6b857a4fba69552e4f6ee22690252ac5495ff3a220ed8002b10",
      "kind": "transparent"
    },
    {
      "address": "0xd88B5Df16cBe94A25A33Ac85C936e123B7264683",
      "txHash": "0x3abbedd7a4d679abf12fdbf8935b158851c9d173405e3d892e8eceeb5e34e4e8",
      "kind": "transparent"
    },
    {
      "address": "0x874E83ca575523dcC5E9A6afb6fF589b241e83C6",
      "txHash": "0x65127b7837e02595068a6f276f6f88807218bfdbf10a066924324531103a8652",
      "kind": "transparent"
    },
    {
      "address": "0x247001fBCE8166ECDeD545a1a52E52041838f87C",
      "txHash": "0x1c68f3453e1ee452066cc6a6e1913dfe644c7edd3a605c2958fc2aac520f6de2",
      "kind": "transparent"
    },
    {
      "address": "0x44317C983Ada8176801B40f98650cf1A1c3E4DcC",
      "txHash": "0x4564e2c1052063055cb710f5bba6539325da37e8af0a803a6393bd3d6c6cdf8f",
      "kind": "transparent"
    },
    {
      "address": "0xa82aF2fb626752171e8BeC3c652fB881EB9297db",
      "txHash": "0x2df22861978b8607a9498d993e6b6da91dc26f27459a49f48e99a8b1de783799",
      "kind": "transparent"
    },
    {
      "address": "0x74f43bE6944154CF4da1731E3ad472dFe34E372B",
      "txHash": "0x4307196a78701d0f2c15559668e2f88782bfa9c84fbbfc37b07b2c7148df56df",
      "kind": "transparent"
    },
    {
      "address": "0x35eAfaf3A839DEa11Df7f3dbb573E261124f3CE3",
      "txHash": "0xc779ed30a1b89880ed3b98d7893db8fe304b421ee8f818f56f906146e4741de3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "804bc410cb73917272859e1042f4207d1d5e9b62834f49804daa5ee39a7d4b8f": {
      "address": "0xe8e6407554881d61c04642721Df901D94509658D",
      "txHash": "0x43e9adc9128f3e32f49163f4262cf4d039b84b08797ba5fbf5726099d8bf79ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributorRole",
            "label": "distributors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/DistributorRole.sol:7"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3579_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:10"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:12"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:13"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:14"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:15"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:87"
          }
        ],
        "types": {
          "t_struct(Counter)3579_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "2f3612a583dbb082b4daceb883930f3b056faee50b444da6650d8641dc7bf69d": {
      "address": "0x30B392b09cD2631F6Bca46C45D546C5Ec2F36FF9",
      "txHash": "0x0c626b2d47de96a4a59b045bcf8df2b4d8f5d5388b01270eb7434043bf886fb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3579_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:50"
          }
        ],
        "types": {
          "t_struct(Counter)3579_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0aa4621b6fa68bd9e309a5b15f9a017ce89ec55d6c3081b2f5cab1732e4f5e2a": {
      "address": "0x1c0f47A0Ac9a6B55EE86cb254386F1a5E56575C8",
      "txHash": "0xf3fa56c2b4456116a35c55936a2091bea45811f4eac000fdf49e526b23e1b79a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "SignerRole",
            "label": "_signers",
            "type": "t_struct(Role)11611_storage",
            "src": "contracts/roles/SignerRole.sol:12"
          },
          {
            "contract": "SignerRole",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/SignerRole.sol:44"
          },
          {
            "contract": "Endemic",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/Endemic.sol:59"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Role)11611_storage": {
            "label": "struct Roles.Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0d6486c7c3176072829c765dac7f5ba49ce8a7b3e37130d2083c04b43d54a784": {
      "address": "0xb1dCF083AC011943e06CFba612ef06C0AB09d0B9",
      "txHash": "0xf8c8fe5b4e08e657c62e9975fc20a3fb4204ec3686c41b498a51f6583d812d38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferManager",
            "label": "makerFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:11"
          },
          {
            "contract": "TransferManager",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:12"
          },
          {
            "contract": "TransferManager",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:13"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:14"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:15"
          },
          {
            "contract": "TransferManager",
            "label": "tradedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)9907",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/TransferManager.sol:192"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)9946_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)9946_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)9946_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)9907": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "78818a5a0d0000a0061a46a6453939915e0f535b58f1a3dd8e295ba91f22c1b9": {
      "address": "0x90C69B29cfADD1dB029426D29724dacAc59680db",
      "txHash": "0x5017b835b5e99cf7f1807c42276cb5fdb9b79f86b2b7592f8ea43a5fe5c9980d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:16"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:21"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:23"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:25"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))",
            "src": "contracts/bid/BidCore.sol:28"
          },
          {
            "contract": "BidCore",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:31"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNFTAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:373"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7170_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7170_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "52438469a5f2e0fe650729488a382420070ee714697dab65d05a64fb78329c38": {
      "address": "0x2Ec607bF973FEd5D1CfEC16D71441F4Fc1b9c083",
      "txHash": "0x1e0d822f3fe4c4e5e32e95c5132475bfce361ca5317504d73b373008f609c611",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:16"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:21"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:23"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:25"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))",
            "src": "contracts/bid/BidCore.sol:28"
          },
          {
            "contract": "BidCore",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:31"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNFTAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:385"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7170_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7170_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "26668a0feb82bb4e7faf57149ef2e88724c5e2bd850a00d525041209d1b2b4e5": {
      "address": "0x4612b800cd431a9751DFe0abBbe83384A208106C",
      "txHash": "0x77d30c83336135186e91f40f51ff9dab0d704575b6a77ea8bc2d41f618e0fa4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11058",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)12950",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFeePerAccount",
            "type": "t_mapping(t_address,t_struct(AccountFee)11313_storage)",
            "src": "contracts/fee/FeeProviderCore.sol:30"
          },
          {
            "contract": "FeeProviderCore",
            "label": "collectionsWithoutInitialSaleFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/fee/FeeProviderCore.sol:31"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/fee/FeeProviderCore.sol:138"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)11058": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)12950": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)11313_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)11313_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b3ac2aab824e64875e0b118a817f7aa11c00ea1a8378c04f78843b1503505d23": {
      "address": "0x190269BD4Aac3a8abf70ae2b61866577A2C94Dc1",
      "txHash": "0x9c1940e19d79ca5528fb808dfea1c486f4eb5069d9c983710ed3168979909782",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ContractRegistry",
            "label": "saleContracts",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/registry/ContractRegistry.sol:8"
          },
          {
            "contract": "ContractRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/registry/ContractRegistry.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "3cac1b1740167ae1b754e7e10917425a044f77624248f076ff7f3a10eb42cbb1": {
      "address": "0x933A43c6705325A6A42ff56674Ca172e66B0d683",
      "txHash": "0x9c7e4f4985b548b3ee508c82d9ab7f041c96ff0c78973317bfb198f76d5f5a67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:12"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:13"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11450",
            "src": "contracts/marketplace/TransferManager.sol:15"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11058",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13629",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:127"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11489_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:30"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11489_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11489_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11450": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11058": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13629": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "305ee9e5bc67277e0b3d1c2de9e4889db276823e463e6d3c55f10a79461b4f47": {
      "address": "0x977C2F5f800845D0459841B23f37d64f34d9f6f8",
      "txHash": "0x9a0322de6b2f8824913cf629bad291993619e6b152d202f8dec33e2248552fc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:19"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:22"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:24"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:26"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7164_storage)))",
            "src": "contracts/bid/BidCore.sol:29"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11390",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)10998",
            "src": "contracts/bid/BidCore.sol:35"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:425"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7164_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7164_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7164_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7164_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "priceWithFee",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IFeeProvider)11390": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)10998": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a26fc167aa3df29d9dc92e0eb4b973347da90345c0db674c6f87b419621bcf5c": {
      "address": "0x5E8b875AA421F85188cBF2BB212A9de8B63EDf59",
      "txHash": "0xea9bb3b5847f1c8903e5e0d181f316365992d2eb2013fed93dafef662f224970",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:19"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:22"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:24"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:26"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7166_storage)))",
            "src": "contracts/bid/BidCore.sol:29"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:33"
          },
          {
            "contract": "BidCore",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11450",
            "src": "contracts/bid/BidCore.sol:35"
          },
          {
            "contract": "BidCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11058",
            "src": "contracts/bid/BidCore.sol:36"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:443"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7166_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7166_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7166_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7166_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "priceWithFee",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IFeeProvider)11450": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11058": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "49f547a0cca17edad1cd6458e7fc26eca9f992d5701e111ada67bb6101ae6f75": {
      "address": "0x2b91F32f7Aa2930Aa82f7E289f1d3A68Cc006b11",
      "txHash": "0x0d0028ba7f3085c5fb3a818145902d1cdfd1323a7ce0de4429d19440be9d5912",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:19"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:22"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:24"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:26"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7225_storage)))",
            "src": "contracts/bid/BidCore.sol:29"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:33"
          },
          {
            "contract": "BidCore",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11506",
            "src": "contracts/bid/BidCore.sol:35"
          },
          {
            "contract": "BidCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11114",
            "src": "contracts/bid/BidCore.sol:36"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:442"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7225_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7225_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7225_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7225_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "priceWithFee",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IFeeProvider)11506": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11114": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "093ea571c4df471546118189fe7a3f5360f4ec7739f86fbf82510bb113b28326": {
      "address": "0xDF64C193fDAf531731db2739082427A1284325CF",
      "txHash": "0xfe9b180cc8cba0e78a2c2af052b1934561713ef620fe20b99c1aa07bd466a8b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11199",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)13141",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFeePerAccount",
            "type": "t_mapping(t_address,t_struct(AccountFee)11313_storage)",
            "src": "contracts/fee/FeeProviderCore.sol:30"
          },
          {
            "contract": "FeeProviderCore",
            "label": "collectionsWithoutInitialSaleFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/fee/FeeProviderCore.sol:31"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/fee/FeeProviderCore.sol:138"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)11199": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)13141": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)11313_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)11313_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "67084654bdc6465656ae08167af89edb745b418463ab70fd59eb9cb238192224": {
      "address": "0x0Db6f6a83bb191CA2D7bFcf73C4f9aB32dA3f175",
      "txHash": "0xaf0dfa300553f97d9c01903913c9314d2596f21e1c99dc06c364150c37d53f51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "royaltiesPerTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Royalties)13765_storage))",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:7"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "royaltiesPerCollection",
            "type": "t_mapping(t_address,t_struct(Royalties)13765_storage)",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:8"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:87"
          },
          {
            "contract": "RoyaltiesProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/royalties/RoyaltiesProvider.sol:12"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Royalties)13765_storage))": {
            "label": "mapping(address => mapping(uint256 => struct RoyaltiesProviderCore.Royalties))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Royalties)13765_storage)": {
            "label": "mapping(uint256 => struct RoyaltiesProviderCore.Royalties)"
          },
          "t_struct(Royalties)13765_storage": {
            "label": "struct RoyaltiesProviderCore.Royalties",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalties)13765_storage)": {
            "label": "mapping(address => struct RoyaltiesProviderCore.Royalties)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6a2db4a8ec7af15fb6512ecf272853c0b5ca1fad48d7034738ba871098ae7c85": {
      "address": "0x8fb20B89432B5283E996CC05a64f64EdFCBb48B0",
      "txHash": "0xffdcfb622fcd9b306f0712e531f1b99f8874ec27476df6189851f8a61a8f656f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:19"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:20"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:23"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:25"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:27"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7234_storage)))",
            "src": "contracts/bid/BidCore.sol:30"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:33"
          },
          {
            "contract": "BidCore",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11765",
            "src": "contracts/bid/BidCore.sol:36"
          },
          {
            "contract": "BidCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11323",
            "src": "contracts/bid/BidCore.sol:37"
          },
          {
            "contract": "BidCore",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13629",
            "src": "contracts/bid/BidCore.sol:38"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:487"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:33"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7234_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7234_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7234_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7234_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "priceWithFee",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IFeeProvider)11765": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11323": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13629": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2ea09638ab6f6dcac4d2cc471f20b261336bc9dd196d62ee79fcf0906b8b3978": {
      "address": "0x4Fa4329ebDCC2C4B31e8E29268891c0b42956644",
      "txHash": "0xcf172d30796ee344aa92ed0f597306396f70d9fc9b65af60ad72407dfbd86a51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11765",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11323",
            "src": "contracts/marketplace/TransferManager.sol:20"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13629",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:165"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11804_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11804_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11804_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11765": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11323": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13629": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ee222d431f20016c3729dd3a8ceb4a62f20f98ed7ee7988497304d979e6be432": {
      "address": "0x42a13fdcc06ADd39fa2778c3a4Fc5967a2F4A7BE",
      "txHash": "0x50467068529ba56faa40aa393a8f487da8ddf002afdbd621b68d5a0ad549c3a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ContractImporter",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/import/ContractImporter.sol:22"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b28170aad9e052f243e3fbdff544e43660d0843c7369dc52df3fd2dd0ea2c4ee": {
      "address": "0x1F0211a4D4e3EcdaBEC42669a6623b928F9Dc9fB",
      "txHash": "0xad098a5e30d24a22aa9537045b783f14b233a6f5dcf9601d32b20f8dd8250a5b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:93"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3638_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:50"
          }
        ],
        "types": {
          "t_struct(Counter)3638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "c035110ac90297da6ccfcebbd78f1d108072826e42f91c81692948d5df8f091d": {
      "address": "0xdD7Bb74a88043c6d9c40Fb2d279DB4B02a6279E9",
      "txHash": "0x8afcf0ff27ffecaa63da01fe3c69d46d813bf159c1028b9b76eb3675de46f16c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "DistributorRole",
            "label": "distributors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/DistributorRole.sol:7"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:93"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3638_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:10"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:12"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:13"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:14"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:15"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:91"
          }
        ],
        "types": {
          "t_struct(Counter)3638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "95b1c27810fc09d7939bd50f490ad58e9944c5bf184132712771290245131185": {
      "address": "0x0207675857aC5250081655449FbCAb3215045fe3",
      "txHash": "0x8d44b5b53cdedfa71edb98cc806068f0606fdc963cfbfc52fd4f11c1c0ddb450",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11323",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)13447",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFeePerAccount",
            "type": "t_mapping(t_address,t_struct(AccountFee)11437_storage)",
            "src": "contracts/fee/FeeProviderCore.sol:30"
          },
          {
            "contract": "FeeProviderCore",
            "label": "collectionsWithoutInitialSaleFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/fee/FeeProviderCore.sol:31"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/fee/FeeProviderCore.sol:147"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)11323": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)13447": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)11437_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)11437_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "71e66ad507ea8e6ed3d4959bb179566d2119bc560327d8f2368689174db3335f": {
      "address": "0x3E885198dDa6F28B09c162dF5913aa32778E01cC",
      "txHash": "0x5b9a28d94fe3269ae212b588a10e913016807d46b585cf14e3cea52dc5444609",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11794",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11323",
            "src": "contracts/marketplace/TransferManager.sol:20"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13676",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:158"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11877_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11877_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11877_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11794": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11323": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13676": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cc33dd954347ac7eff4a9828981a9e1a73f1a13715890ab012c68003596a13fe": {
      "address": "0x3BF513160117E792132B7AC398eE2C0e9A687Efd",
      "txHash": "0xa53cfaf0952254c73f72354d98868362959e24f6f37bfaccf8ee598f193eb3f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ArtMinter",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/minter/ArtMinter.sol:31"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "35636494ee78b01a6618b2ef9afffa62f1a3888828f1ac4db5ac1fbd526a1ff1": {
      "address": "0xfda29431840aE214583D828A19c1205c2475178e",
      "txHash": "0x25b67693a368d893c510664d01d1a21eb33a2aa857a89db0397e0c3307eaa8e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:93"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3638_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:49"
          }
        ],
        "types": {
          "t_struct(Counter)3638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "095553b7e7e4ddb5d300540cda6fbf3a422918bc6f7071ddf97034fc7858d708": {
      "address": "0x3f9bd902dE8845B9cBBe8f26333FA10fE9a494Fe",
      "txHash": "0x68de95c290f63797e705c1f3500c6ed0da26ccd9b55d36ef398412055b0dad0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11791",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11320",
            "src": "contracts/marketplace/TransferManager.sol:20"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13756",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:160"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11874_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:254"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11874_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11874_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11791": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11320": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13756": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "62b87100f221688d3cf108ccade468ab6a0e0027907baa767ae6afccda952f23": {
      "address": "0x55e04A6126c8d626133b6D2Ea2dfa5F4a71bd96e",
      "txHash": "0xc3c6bc584623e2eb3644237c7a3112a548c1406f0949d073984e1e54c5231215",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:20"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:74"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3638_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:49"
          }
        ],
        "types": {
          "t_struct(Counter)3638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "e29e75e775df706a52f65f3d99b7bb9c781c7e320afcc4a4d18fec516f33246e": {
      "address": "0x3Ea680817a6A5d38fBC9DD853D1eb96291EB2065",
      "txHash": "0x955109e28a55ef79c8c9d53add73071e42ea3f0a9a0db17cf5b3d3da6399ce0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "CollectionBidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/CollectionBidCore.sol:18"
          },
          {
            "contract": "CollectionBidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/CollectionBidCore.sol:19"
          },
          {
            "contract": "CollectionBidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/CollectionBidCore.sol:20"
          },
          {
            "contract": "CollectionBidCore",
            "label": "bidCounterByCollection",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/bid/CollectionBidCore.sol:23"
          },
          {
            "contract": "CollectionBidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/CollectionBidCore.sol:25"
          },
          {
            "contract": "CollectionBidCore",
            "label": "bidIdByCollectionAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bytes32))",
            "src": "contracts/bid/CollectionBidCore.sol:27"
          },
          {
            "contract": "CollectionBidCore",
            "label": "bidsByCollection",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Bid)8498_storage))",
            "src": "contracts/bid/CollectionBidCore.sol:30"
          },
          {
            "contract": "CollectionBidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/CollectionBidCore.sol:32"
          },
          {
            "contract": "CollectionBidCore",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/bid/CollectionBidCore.sol:33"
          },
          {
            "contract": "CollectionBidCore",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)12721",
            "src": "contracts/bid/CollectionBidCore.sol:35"
          },
          {
            "contract": "CollectionBidCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)12250",
            "src": "contracts/bid/CollectionBidCore.sol:36"
          },
          {
            "contract": "CollectionBidCore",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)14686",
            "src": "contracts/bid/CollectionBidCore.sol:37"
          },
          {
            "contract": "CollectionBidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/CollectionBidCore.sol:434"
          },
          {
            "contract": "CollectionBid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/CollectionBid.sol:33"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(address => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Bid)8498_storage))": {
            "label": "mapping(address => mapping(uint256 => struct CollectionBidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)8498_storage)": {
            "label": "mapping(uint256 => struct CollectionBidCore.Bid)"
          },
          "t_struct(Bid)8498_storage": {
            "label": "struct CollectionBidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "priceWithFee",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IFeeProvider)12721": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)12250": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)14686": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
