{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF26036A51aa53785dB6fF4df52E1eac87482C605",
    "txHash": "0xb159fa3a5480bfbbacf97a8bbf9f5b25f4ee355509ff63903e0ddf2c07a45978",
    "deployTransaction": {
      "hash": "0xb159fa3a5480bfbbacf97a8bbf9f5b25f4ee355509ff63903e0ddf2c07a45978",
      "type": 0,
      "accessList": null,
      "blockHash": "0x3c65b4cd356bc5ffc544758950f3767c67411530afb08ba15a0152feae3cf782",
      "blockNumber": 54569273,
      "transactionIndex": 0,
      "confirmations": 4,
      "from": "0x1d1C46273cEcC00F7503AB3E97A40a199bcd6b31",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x6691b7"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 23,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xef49c2f6116e0d00fec10d396e3b78c0b1d8e906dc1c87e9348ecdacebe136ac",
      "s": "0x26f3efe684e86aa747a669a0438b8fde2a8f17f63987a24b2d575c2528d0e6ad",
      "v": 2626323144,
      "creates": "0xF26036A51aa53785dB6fF4df52E1eac87482C605",
      "chainId": 1313161554
    }
  },
  "proxies": [
    {
      "address": "0x97cb197f862173a0f4c0B9Fda3272b56464578cc",
      "txHash": "0x082f28f8c6c65c286204799737901e736e506765b0c35766e845a49de89e761d",
      "kind": "transparent"
    },
    {
      "address": "0xCd75e540157E04b0a7f1E347d21dED2FF748AD0f",
      "txHash": "0x48fd26c045adb7d29d40b7287e1a5a5b143c5f54d1240fbfd979d5573d05b48d",
      "kind": "transparent"
    },
    {
      "address": "0x329b61bF16aDd14863c1C154614888F14303169c",
      "txHash": "0x168c44d7d674993efbf3aa6aee3e5c76696106c176c68cf5c0531865ca1d77bb",
      "kind": "transparent"
    },
    {
      "address": "0xdC446d49c0055B48Ad6626FDf0F358396c8C0D06",
      "txHash": "0x5f350a8eff7c25b8e47e9f3b75a9b0b5731a20776e08654d2aac22441759c159",
      "kind": "transparent"
    },
    {
      "address": "0x70669ea7C7c7364fbC7418e7d12F416379389fC4",
      "txHash": "0x02e579d7f58f7b11f667c3469d18102def7618833c226d5c92abd8768cf45211",
      "kind": "transparent"
    },
    {
      "address": "0xf65D3A9820b2ceFf9289d9EACFc3aAB9bf00a935",
      "txHash": "0x7e15261fa4263131c60eddba66e3608c7f92b283e3bf701961fee6837a04cdb5",
      "kind": "transparent"
    },
    {
      "address": "0xB2d6c6D02f9b6C68c8Aa5fdb455f0feB008D3107",
      "txHash": "0xbc0dd82a6b81a9f036008f1576e8cf757bae57cacddaf02a16404706c7dd160a",
      "kind": "transparent"
    },
    {
      "address": "0xd35c04C360Ddf088D69767E7B47a3102856594Cd",
      "txHash": "0xed240f2298c2e726e098bb30abf5c13867af64ddff71d9abe0d4cbae028b0312",
      "kind": "transparent"
    },
    {
      "address": "0x3853676279Ada77826afDEdE6a815D5250A1867A",
      "txHash": "0x4a0473b0428670c19d741f7a25e30a8588d8656052e9aaaeee1d88a32586d85d",
      "kind": "transparent"
    },
    {
      "address": "0x5f89c1bBbCAc22fc15aC3074c0CfeC6bcF117FE5",
      "txHash": "0x1be8701b01fc20d61421837f11b165f64202f3fa19d173a0770c8ee7071e6f74",
      "kind": "transparent"
    },
    {
      "address": "0xE6a3541995E78600A949049C41A1C310634C57cc",
      "txHash": "0x20f857f735b7f486c111d93da55c058e4dbcc5cb9005c942792f43d4c0337738",
      "kind": "transparent"
    },
    {
      "address": "0x915F1E2aDE42374BbdD9051BA84dc0EC401DBed2",
      "txHash": "0x73c2ed35e3e0e718a8187c6c97f34265cc9458df8f1279ff22930666661645a7",
      "kind": "transparent"
    },
    {
      "address": "0x427f522121534EB79d40Cbeeb5C62e172c05979d",
      "txHash": "0x390637a912f78b21c3380bebac529c795c703d2511814486425f743ccf62ccb7",
      "kind": "transparent"
    },
    {
      "address": "0x71bD15c6C2117ef58dd1Eb9a494A1abc24423808",
      "txHash": "0x1b51bbcabe4d2688970b02603437ae0d52ddde5c77c4998484d87bfb011b500d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fca7689c102d3ab1d4fdee28a98ba1b0eed02f53e7c2a0661cc7b50a3b0beeb2": {
      "address": "0xc10A2dD01b2b5837953A9d470ce13Fa6DB7e62ca",
      "txHash": "0xe169443398067695b8d820c449ec8625f6ff081d6dda4fe77136eb3864cdfe78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributorRole",
            "label": "distributors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/DistributorRole.sol:7"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3579_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:10"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:12"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:13"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:14"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:15"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:87"
          }
        ],
        "types": {
          "t_struct(Counter)3579_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "2f3612a583dbb082b4daceb883930f3b056faee50b444da6650d8641dc7bf69d": {
      "address": "0xCC94c2896ED00053A6621E595B4953f4cF9D8571",
      "txHash": "0x46531b96c6f616fb9a57001e2c21b72c67e0780287374b0df35c735399d7808e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3579_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:50"
          }
        ],
        "types": {
          "t_struct(Counter)3579_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0aa4621b6fa68bd9e309a5b15f9a017ce89ec55d6c3081b2f5cab1732e4f5e2a": {
      "address": "0x60A9CF4Dd07128622677d73E17243c482d1051C7",
      "txHash": "0xf0c728d084f1bcacc3ce60dff8c937c670b3bb60e6eb48c9a71ece149b71cd00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "SignerRole",
            "label": "_signers",
            "type": "t_struct(Role)12635_storage",
            "src": "contracts/roles/SignerRole.sol:12"
          },
          {
            "contract": "SignerRole",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/SignerRole.sol:44"
          },
          {
            "contract": "Endemic",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/Endemic.sol:59"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Role)12635_storage": {
            "label": "struct Roles.Role",
            "members": [
              {
                "label": "bearer",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0d6486c7c3176072829c765dac7f5ba49ce8a7b3e37130d2083c04b43d54a784": {
      "address": "0x67da0755b6A777ae00614d8bfE075C477945E71a",
      "txHash": "0xda1e113ba8a34367aad916fdfae0327e5651cacd8474a05787941c8ee2718afa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferManager",
            "label": "makerFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:11"
          },
          {
            "contract": "TransferManager",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:12"
          },
          {
            "contract": "TransferManager",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:13"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:14"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:15"
          },
          {
            "contract": "TransferManager",
            "label": "tradedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)10931",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/TransferManager.sol:192"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)10970_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:41"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)10970_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)10970_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)10931": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "515b5b2841ef088b6e8b4b1127f95c3c60e54a73e20fc5f9beb51910a6cef84a": {
      "address": "0xdd4447B3D5C8Ee09aBDBFAF9a6155f7625bcB389",
      "txHash": "0x946b28335f5280ad53d7f56b77450c2f590535685ee977c00035364ebe230591",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:16"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:21"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:23"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:25"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))",
            "src": "contracts/bid/BidCore.sol:28"
          },
          {
            "contract": "BidCore",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:31"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNFTAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:381"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7170_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7170_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "52438469a5f2e0fe650729488a382420070ee714697dab65d05a64fb78329c38": {
      "address": "0x5aDc57C93Fec0535a7D2d4655F4E81325F012641",
      "txHash": "0xc293d71a041998431f4569cac09ed792959e4d0e25bc6f83388ff3940159641a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:16"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:21"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:23"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:25"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))",
            "src": "contracts/bid/BidCore.sol:28"
          },
          {
            "contract": "BidCore",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:31"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNFTAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:385"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7170_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7170_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a656898b923e572ff39f3c1045cbc67146e274a1531a1ba4aa880204b5b17028": {
      "address": "0x58e07240C1E6d0068e8589650E64D96c1C501793",
      "txHash": "0x48ce21304c3dd7c63bb8c71ee9b109872ae13efc7a39b5d4267f8e6e190ed136",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ContractRegistry",
            "label": "saleContracts",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/registry/ContractRegistry.sol:8"
          },
          {
            "contract": "ContractRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/registry/ContractRegistry.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1f1f0dce1b9b4eebaa07e6154200667fc61807f1c629bf368bd745b1978f3e27": {
      "address": "0x3c008960182331A28949f7fc92a6A7B3096A6EB1",
      "txHash": "0xcc76ad62b66fd3913d9162ea7dad22aa61d02776d86cc1c17762379306a22cb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11198",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)13090",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProviderCore.sol:114"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)11198": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)13090": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)11313_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)11313_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "093ea571c4df471546118189fe7a3f5360f4ec7739f86fbf82510bb113b28326": {
      "address": "0xF5dad834776908D4320Df95d6E046acB54246A7f",
      "txHash": "0xc557be064c8e6119a3ff42fdda0a55ce67e15d8d07bf8d831e729be4c8246367",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11199",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)13141",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFeePerAccount",
            "type": "t_mapping(t_address,t_struct(AccountFee)11313_storage)",
            "src": "contracts/fee/FeeProviderCore.sol:30"
          },
          {
            "contract": "FeeProviderCore",
            "label": "collectionsWithoutInitialSaleFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/fee/FeeProviderCore.sol:31"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/fee/FeeProviderCore.sol:138"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)11199": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)13141": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)11313_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)11313_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d62309ec6dc964f85e62286ff713075a434df0f8253309f0728d8ed1c94d7ce8": {
      "address": "0xa0721d4188FeEC0f87Cd0B2739FaD1E0BC596FB3",
      "txHash": "0x57358b76b9fa568d53cfb17bf71bd7728a90128409d242526a61298d762ed581",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:12"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:13"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11641",
            "src": "contracts/marketplace/TransferManager.sol:15"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11199",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/TransferManager.sol:127"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11680_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:30"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11680_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11680_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11641": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11199": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "67084654bdc6465656ae08167af89edb745b418463ab70fd59eb9cb238192224": {
      "address": "0x7C22D234fb027dBe382c3dFdDD56Bc06caa86233",
      "txHash": "0xe8409d3f56edf2586c2d7a8998df5d1d4735a7fd0311c1111e5c378af312e595",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "royaltiesPerTokenId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Royalties)13724_storage))",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:7"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "royaltiesPerCollection",
            "type": "t_mapping(t_address,t_struct(Royalties)13724_storage)",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:8"
          },
          {
            "contract": "RoyaltiesProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/royalties/RoyaltiesProviderCore.sol:87"
          },
          {
            "contract": "RoyaltiesProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/royalties/RoyaltiesProvider.sol:12"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Royalties)13724_storage))": {
            "label": "mapping(address => mapping(uint256 => struct RoyaltiesProviderCore.Royalties))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Royalties)13724_storage)": {
            "label": "mapping(uint256 => struct RoyaltiesProviderCore.Royalties)"
          },
          "t_struct(Royalties)13724_storage": {
            "label": "struct RoyaltiesProviderCore.Royalties",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalties)13724_storage)": {
            "label": "mapping(address => struct RoyaltiesProviderCore.Royalties)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "64157e79184783837c844d8926019b8b4cb1b5e8e4c4faeca8d334458d7cfcc3": {
      "address": "0xF24f15486ff764BCbB3059973924CF8aD3Bb7f08",
      "txHash": "0xa74af508774f4629e0911aa7613d2f1cc3e51a82f3a4f821702ed64ecd3d68b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11753",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11311",
            "src": "contracts/marketplace/TransferManager.sol:20"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13662",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:165"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11836_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11836_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11836_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11753": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11311": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13662": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ee222d431f20016c3729dd3a8ceb4a62f20f98ed7ee7988497304d979e6be432": {
      "address": "0x76E8CB46eE8BDe8C0A315e5e7cf7C4492Cef7bea",
      "txHash": "0x2e41c0947e32e8a6bfadf2d2a37be82b49dad7e6de9f73d494519386927c609f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ContractImporter",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/import/ContractImporter.sol:22"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b28170aad9e052f243e3fbdff544e43660d0843c7369dc52df3fd2dd0ea2c4ee": {
      "address": "0x53F93585Dff4c255CB08F3Ad244A66c00355C6ba",
      "txHash": "0xf9689802c355f0901f991f8b34343b827e955240c599e9d045158e786b83094b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:93"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3638_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:50"
          }
        ],
        "types": {
          "t_struct(Counter)3638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "c035110ac90297da6ccfcebbd78f1d108072826e42f91c81692948d5df8f091d": {
      "address": "0x25C1B8ac58DCD407d74c7ACEc5b2Cb8279139A3A",
      "txHash": "0x2f10e19037afc9a0c0fdf542a7fda21a0722687e78909aa70236fb8957f8b351",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:172"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:76"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "DistributorRole",
            "label": "distributors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/DistributorRole.sol:7"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:93"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3638_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:10"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:12"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:13"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:14"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:15"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:91"
          }
        ],
        "types": {
          "t_struct(Counter)3638_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "95b1c27810fc09d7939bd50f490ad58e9944c5bf184132712771290245131185": {
      "address": "0x5CF9A974624B056239E29566E73441Cf77575343",
      "txHash": "0xf212f022d94aff7a9d9470cd4f6860739b576f0ccde94ca2fa6d45f37fcfed1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "FeeProviderCore",
            "label": "secondarySaleMakerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:15"
          },
          {
            "contract": "FeeProviderCore",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:16"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFee",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:17"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/fee/FeeProviderCore.sol:18"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSales",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/fee/FeeProviderCore.sol:20"
          },
          {
            "contract": "FeeProviderCore",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11323",
            "src": "contracts/fee/FeeProviderCore.sol:22"
          },
          {
            "contract": "FeeProviderCore",
            "label": "contractRegistry",
            "type": "t_contract(IContractRegistry)13447",
            "src": "contracts/fee/FeeProviderCore.sol:23"
          },
          {
            "contract": "FeeProviderCore",
            "label": "initialSaleFeePerAccount",
            "type": "t_mapping(t_address,t_struct(AccountFee)11437_storage)",
            "src": "contracts/fee/FeeProviderCore.sol:30"
          },
          {
            "contract": "FeeProviderCore",
            "label": "collectionsWithoutInitialSaleFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/fee/FeeProviderCore.sol:31"
          },
          {
            "contract": "FeeProviderCore",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/fee/FeeProviderCore.sol:147"
          },
          {
            "contract": "FeeProvider",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/fee/FeeProvider.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IEndemicMasterNFT)11323": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IContractRegistry)13447": {
            "label": "contract IContractRegistry"
          },
          "t_mapping(t_address,t_struct(AccountFee)11437_storage)": {
            "label": "mapping(address => struct FeeProviderCore.AccountFee)"
          },
          "t_struct(AccountFee)11437_storage": {
            "label": "struct FeeProviderCore.AccountFee",
            "members": [
              {
                "label": "account",
                "type": "t_address"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "71e66ad507ea8e6ed3d4959bb179566d2119bc560327d8f2368689174db3335f": {
      "address": "0xdf9FB4d871C60A9E982b263d07ca17EB1e9bA1aF",
      "txHash": "0xe230bdef543e1a6d82134eec79cb06e712139ca6254f3faca271f37c4b944bc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TransferManager",
            "label": "masterNftShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:16"
          },
          {
            "contract": "TransferManager",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:17"
          },
          {
            "contract": "TransferManager",
            "label": "feeProvider",
            "type": "t_contract(IFeeProvider)11794",
            "src": "contracts/marketplace/TransferManager.sol:19"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)11323",
            "src": "contracts/marketplace/TransferManager.sol:20"
          },
          {
            "contract": "TransferManager",
            "label": "royaltiesProvider",
            "type": "t_contract(IRoyaltiesProvider)13676",
            "src": "contracts/marketplace/TransferManager.sol:21"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/marketplace/TransferManager.sol:158"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)11877_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:19"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:241"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)11877_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)11877_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IFeeProvider)11794": {
            "label": "contract IFeeProvider"
          },
          "t_contract(IEndemicMasterNFT)11323": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_contract(IRoyaltiesProvider)13676": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
