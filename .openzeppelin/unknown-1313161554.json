{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8e6eCEcD978C37adaE1B09775fE23Ee267c8A67c",
    "txHash": "0xa146902d043897c356b78811d656c8596e99b215172d7d44653df9e5884b0f89",
    "deployTransaction": {
      "hash": "0xa146902d043897c356b78811d656c8596e99b215172d7d44653df9e5884b0f89",
      "type": 0,
      "accessList": null,
      "blockHash": "0x5b81ea34932e94a28fb6807cdf2cd09bcd530502a8ce65b9e24a62cd4a90bb3b",
      "blockNumber": 53880459,
      "transactionIndex": 0,
      "confirmations": 2,
      "from": "0x1d1C46273cEcC00F7503AB3E97A40a199bcd6b31",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x6691b7"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x45db018e1d5dba4e47ebdabf21629d76434eac04e7d0eb17cd2298f43a073ab6",
      "s": "0x7e950db9c1b963edf841916c34c9499307e2d2d1700f799aeb1a8923212164ce",
      "v": 2626323144,
      "creates": "0x8e6eCEcD978C37adaE1B09775fE23Ee267c8A67c",
      "chainId": 1313161554
    }
  },
  "proxies": [
    {
      "address": "0x7f5C4AdeD107F66687E6E55dEe36A3A8FA3de030",
      "txHash": "0x45ae988f879ff6f5631e89ef634113be0bc31d796929dab844c7fa3902a660d1",
      "kind": "transparent"
    },
    {
      "address": "0x737De210b5b70de2f6A52af558120a36d3eE3067",
      "txHash": "0xb680607881b47c0244eaca7a8c9331f62248d3995f54007406a893c71fce539f",
      "kind": "transparent"
    },
    {
      "address": "0x11245523341e83558Db402a955ed7DF3320C1BF8",
      "txHash": "0x6e3a85bf4a63cc5314fee868237e4310b48d7e4676e56e75e5a4d7ea7a1e01bb",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2f3612a583dbb082b4daceb883930f3b056faee50b444da6650d8641dc7bf69d": {
      "address": "0x043323e453ff6F1f13FB95500b95abEb80c281Da",
      "txHash": "0x5a173d3204615179b14a6c0158840f24d1f2c50b413171aabc7357697160a44d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "EndemicNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3579_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:9"
          },
          {
            "contract": "EndemicNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicNFT.sol:50"
          }
        ],
        "types": {
          "t_struct(Counter)3579_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "804bc410cb73917272859e1042f4207d1d5e9b62834f49804daa5ee39a7d4b8f": {
      "address": "0x978c75437cD59571B9b4CBE323c2Ed5fe21d051f",
      "txHash": "0x158f62c91c59e653f4f969743967aaa3cceb229e2e2c459e6bb79e7276abd10f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:7"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721DefaultApproval.sol:40"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:34"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "DistributorRole",
            "label": "distributors",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/DistributorRole.sol:7"
          },
          {
            "contract": "ERC721Base",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts/erc-721/ERC721Base.sol:19"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/ERC721Base.sol:97"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3579_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:10"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "price",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:12"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "saleIsActive",
            "type": "t_bool",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:13"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:14"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:15"
          },
          {
            "contract": "EndemicMasterNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/erc-721/EndemicMasterNFT.sol:87"
          }
        ],
        "types": {
          "t_struct(Counter)3579_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "e89a26f8529ed6641b3a177b0b6baeb5f77ba54aae25af97f475b28d6d491ce6": {
      "address": "0x361B9C44ab78869622d3db60CC2b964A4C02c6A1",
      "txHash": "0x1451d1ef7f6b408d66da067bb261425e89bd3eb598f5a3f74fe708b8f145a8da",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TransferManager",
            "label": "claimEthAddress",
            "type": "t_address",
            "src": "contracts/marketplace/TransferManager.sol:11"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFTShares",
            "type": "t_uint256",
            "src": "contracts/marketplace/TransferManager.sol:12"
          },
          {
            "contract": "TransferManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)9907",
            "src": "contracts/marketplace/TransferManager.sol:13"
          },
          {
            "contract": "TransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/TransferManager.sol:69"
          },
          {
            "contract": "FeeManager",
            "label": "makerFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/FeeManager.sol:8"
          },
          {
            "contract": "FeeManager",
            "label": "initialSaleCut",
            "type": "t_uint256",
            "src": "contracts/marketplace/FeeManager.sol:9"
          },
          {
            "contract": "FeeManager",
            "label": "masterNftCut",
            "type": "t_uint256",
            "src": "contracts/marketplace/FeeManager.sol:10"
          },
          {
            "contract": "FeeManager",
            "label": "masterNFT",
            "type": "t_contract(IEndemicMasterNFT)9907",
            "src": "contracts/marketplace/FeeManager.sol:11"
          },
          {
            "contract": "FeeManager",
            "label": "_tradedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/marketplace/FeeManager.sol:13"
          },
          {
            "contract": "FeeManager",
            "label": "takerFee",
            "type": "t_uint256",
            "src": "contracts/marketplace/FeeManager.sol:14"
          },
          {
            "contract": "FeeManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/FeeManager.sol:112"
          },
          {
            "contract": "MarketplaceCore",
            "label": "idToAuction",
            "type": "t_mapping(t_bytes32,t_struct(Auction)10240_storage)",
            "src": "contracts/marketplace/MarketplaceCore.sol:21"
          },
          {
            "contract": "MarketplaceCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/MarketplaceCore.sol:287"
          },
          {
            "contract": "Marketplace",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/marketplace/Marketplace.sol:42"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Auction)10240_storage)": {
            "label": "mapping(bytes32 => struct LibAuction.Auction)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Auction)10240_storage": {
            "label": "struct LibAuction.Auction",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "contractId",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256"
              },
              {
                "label": "endingPrice",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startedAt",
                "type": "t_uint256"
              },
              {
                "label": "assetClass",
                "type": "t_bytes4"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_contract(IEndemicMasterNFT)9907": {
            "label": "contract IEndemicMasterNFT"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "78818a5a0d0000a0061a46a6453939915e0f535b58f1a3dd8e295ba91f22c1b9": {
      "address": "0xFfE69AFf658bC344dFE3d5803905C6F0053d6455",
      "txHash": "0xfdd1bb7ec9f478a1b19d7cb1d7437ef19c862cd36d5d2cfe3b0be806a6186225",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "BidCore",
            "label": "MAX_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:16"
          },
          {
            "contract": "BidCore",
            "label": "MIN_BID_DURATION",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:17"
          },
          {
            "contract": "BidCore",
            "label": "ERC721_Received",
            "type": "t_bytes4",
            "src": "contracts/bid/BidCore.sol:18"
          },
          {
            "contract": "BidCore",
            "label": "bidCounterByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/bid/BidCore.sol:21"
          },
          {
            "contract": "BidCore",
            "label": "bidIndexByBidId",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/bid/BidCore.sol:23"
          },
          {
            "contract": "BidCore",
            "label": "bidIdByTokenAndBidder",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))",
            "src": "contracts/bid/BidCore.sol:25"
          },
          {
            "contract": "BidCore",
            "label": "bidsByToken",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))",
            "src": "contracts/bid/BidCore.sol:28"
          },
          {
            "contract": "BidCore",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/bid/BidCore.sol:31"
          },
          {
            "contract": "BidCore",
            "label": "feeClaimAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:32"
          },
          {
            "contract": "BidCore",
            "label": "masterNFTAddress",
            "type": "t_address",
            "src": "contracts/bid/BidCore.sol:34"
          },
          {
            "contract": "BidCore",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/BidCore.sol:373"
          },
          {
            "contract": "Bid",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/bid/Bid.sol:26"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bytes32)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bytes32)))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(uint256 => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct BidCore.Bid)))"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Bid)7170_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BidCore.Bid))"
          },
          "t_mapping(t_uint256,t_struct(Bid)7170_storage)": {
            "label": "mapping(uint256 => struct BidCore.Bid)"
          },
          "t_struct(Bid)7170_storage": {
            "label": "struct BidCore.Bid",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
